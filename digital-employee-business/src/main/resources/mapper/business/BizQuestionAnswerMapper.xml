<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digitalemployee.business.mapper.BizQuestionAnswerMapper">
    
    <resultMap type="BizQuestionAnswer" id="BizQuestionAnswerResult">
        <result property="id"    column="id"    />
        <result property="digitalEmployeeId"    column="digital_employee_id"    />
        <result property="collectionId"    column="collection_id"    />
        <result property="question"    column="question"    />
        <result property="answer"    column="answer"    />
        <result property="status"    column="status"    />
        <result property="createType"    column="create_type"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectBizQuestionAnswerVo">
        select id, digital_employee_id,collection_id, question, answer, status, create_type, create_by, create_time, update_by, update_time, remark from biz_question_answer
    </sql>

    <select id="selectBizQuestionAnswerList" parameterType="BizQuestionAnswer" resultMap="BizQuestionAnswerResult">
        <include refid="selectBizQuestionAnswerVo"/>
        <where>  
            <if test="bizQuestionAnswer.digitalEmployeeId != null "> and digital_employee_id = #{bizQuestionAnswer.digitalEmployeeId}</if>
            <if test="bizQuestionAnswer.question != null  and bizQuestionAnswer.question != ''"> and question like concat('%', #{bizQuestionAnswer.question}, '%')</if>
            <if test="bizQuestionAnswer.answer != null  and bizQuestionAnswer.answer != ''"> and answer = #{bizQuestionAnswer.answer}</if>
            <if test="bizQuestionAnswer.status != null "> and status = #{bizQuestionAnswer.status}</if>
            <if test="bizQuestionAnswer.createType != null "> and create_type = #{bizQuestionAnswer.createType}</if>
             <if test="startTime !=null and endTime !=null">
                 and create_time &gt;= #{startTime}
                 and create_time &lt; #{endTime}
             </if>
        </where>
    </select>

    <select id="selectBizQuestionAnswerListBydeId" parameterType="BizQuestionAnswer" resultMap="BizQuestionAnswerResult">
        <include refid="selectBizQuestionAnswerVo"/>
        <where>
            <if test="digitalEmployeeId != null "> and digital_employee_id = #{digitalEmployeeId}</if>
        </where>
    </select>

    <select id="selectOneBizQuestionAnswer" resultMap="BizQuestionAnswerResult">
        <include refid="selectBizQuestionAnswerVo"/>
        <where>
            <if test="digitalEmployeeId != null "> and digital_employee_id = #{digitalEmployeeId}</if>
            <if test="question != null  and question != ''"> and question = #{question}</if>
            <if test="answer != null  and answer != ''"> and answer = #{answer}</if>
            <if test="createType != null "> and create_type = #{createType}</if>
        </where>
    </select>

    <select id="selectBizQuestionAnswer" resultMap="BizQuestionAnswerResult">
        <include refid="selectBizQuestionAnswerVo"/>
        <where>
            id !=#{id}
            <if test="digitalEmployeeId != null "> and digital_employee_id = #{digitalEmployeeId}</if>
            <if test="question != null  and question != ''"> and question = #{question}</if>
            <if test="answer != null  and answer != ''"> and answer = #{answer}</if>
            <if test="createType != null "> and create_type = #{createType}</if>
        </where>
    </select>

    <select id="queryBizQuestionAnswerList" resultMap="BizQuestionAnswerResult">
        <include refid="selectBizQuestionAnswerVo"/>
        <where>
            <if test="digitalEmployeeId != null "> and digital_employee_id = #{digitalEmployeeId}</if>
            <if test="question != null  and question != ''"> and question = #{question}</if>
            <if test="answer != null  and answer != ''"> and answer = #{answer}</if>
        </where>
    </select>
    
    <select id="selectBizQuestionAnswerById" parameterType="Long" resultMap="BizQuestionAnswerResult">
        <include refid="selectBizQuestionAnswerVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBizQuestionAnswer" parameterType="BizQuestionAnswer" useGeneratedKeys="true" keyProperty="id">
        insert into biz_question_answer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="digitalEmployeeId != null">digital_employee_id,</if>
            <if test="question != null">question,</if>
            <if test="answer != null">answer,</if>
            <if test="status != null">status,</if>
            <if test="createType != null">create_type,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="digitalEmployeeId != null">#{digitalEmployeeId},</if>
            <if test="question != null">#{question},</if>
            <if test="answer != null">#{answer},</if>
            <if test="status != null">#{status},</if>
            <if test="createType != null">#{createType},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBizQuestionAnswer" parameterType="BizQuestionAnswer">
        update biz_question_answer
        <trim prefix="SET" suffixOverrides=",">
            <if test="digitalEmployeeId != null">digital_employee_id = #{digitalEmployeeId},</if>
            <if test="collectionId != null">collection_id = #{collectionId},</if>
            <if test="question != null">question = #{question},</if>
            <if test="answer != null">answer = #{answer},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createType != null">create_type = #{createType},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBizQuestionAnswerById" parameterType="Long">
        delete from biz_question_answer where id = #{id}
    </delete>

     <delete id="deleteBizQuestionAnswerByIds" parameterType="String">
        delete from biz_question_answer where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="insertBatchQuestionAnswer" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into biz_question_answer (digital_employee_id,collection_id,question, answer,status,create_type,create_by,create_time,update_by,update_time,remark) values
        <foreach collection="list" item="item" separator=",">
            (#{item.digitalEmployeeId},#{item.collectionId}, #{item.question}, #{item.answer},1,#{item.createType},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime},#{item.remark})
        </foreach>
    </insert>

    <select id="querySimilarQuestionList" resultMap="BizQuestionAnswerResult">
        select id, digital_employee_id, question, answer, status, create_type, create_by, create_time, update_by, update_time, remark
        from biz_question_answer
        where question in
              (select question from biz_question_answer group by question having count(question)> 1)
          AND digital_employee_id = #{digitalEmployeeId}
        order by  question
    </select>
</mapper>